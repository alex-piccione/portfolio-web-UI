name: Build and test
on: 
  #push:  
  pull_request:
    types: [opened, synchronize, reopened, labeled]

env:  
  VERSION: 0.1.${{github.run_number}}
  CR_URL: c8n.io
  REPO: portfolio

jobs:
  build:
    name: "Build"
    if: github.event.action != 'labeled'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build
        run: yarn install; yarn build
  
  tests_jest:
    name: Run Jest tests
    if: github.event.action != 'labeled'
    #needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        run: yarn install
      - name: Run Jest
        run: yarn test:unit

  tests_cypress:
    name: Run Cypress Tests
    if: github.event.action != 'labeled'
    #needs: [build]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install packages
        run: yarn install
      - name: Run Cypress
        #run: yarn start & yarn test:ui:run
        run: yarn dev & yarn test:ui:run
  
  build_docker_image:
    name: Build Docker image
    if: github.event.action == 'labeled' && github.event.label.name == 'docker:image'
    runs-on: ubuntu-latest
    #needs: [build, tests_jest, tests_cypress]    
    steps:
      # Do we need checkout? https://stackoverflow.com/questions/71668199/github-action-job-can-continue-from-the-state-the-previous-job-left-without-a
      - name: Checkout
        uses: actions/checkout@v2
      - name: Build Docker image
        
        run: |
          echo build the image using the Dockerfile in devops folder
          docker image build -t $REPO:0 -f devops/Dockerfile.2 .    
          echo -----
          echo ### Container Registry Login and Push ###
          echo ${{secrets.CR_PWD}}| docker login -u ${{secrets.CR_USERID}} $CR_URL --password-stdin
          echo re-tag and push the images
          docker image tag $REPO:0 $CR_URL/${{secrets.CR_USERID}}/$REPO:$VERSION
          docker image tag $REPO:0 $CR_URL/${{secrets.CR_USERID}}/$REPO:latest
          docker image push $CR_URL/${{secrets.CR_USERID}}/$REPO:$VERSION           
          docker image push $CR_URL/${{secrets.CR_USERID}}/$REPO:latest 
          echo -----