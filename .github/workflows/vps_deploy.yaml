name: Deploy on VPS

on: 
  push:
    branches: [main]

env:  
  HOST: ${{ secrets.host_ip }}
  HOST_ID: ${{ secrets.host_id }}
  KNOWN_HOST: ${{ secrets.known_host }}
  USER: ${{ secrets.host_user }}
  SSH_PRIVATE_KEY: ${{ secrets.host_ssh_private_key }}

jobs: 
  ssh_test:
    runs-on: ubuntu-latest
    steps:
      - name: Write SSH keys
        run: |
          install -m 600 -D /dev/null ~/.ssh/id_rsa
          echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
          ssh-keyscan -H $HOST > ~/.ssh/known_hosts
          echo test connecttion...
          ssh $USER@$HOST ls /tmp  

      #- name: Write SSH keys 2
      #  run: |
      #    install -m 600 -D /dev/null ~/.ssh/id_rsa
      #    echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
      #    hosts="$(dig +short "$HOST" | grep -v '\.$' | sed -z 's|\n|,|g')$host"
      #    ssh-keyscan -H "$hosts" > ~/.ssh/known_hosts
      #    echo test connecttion...
      #    ssh $USER@$HOST ls /tmp

      - name: Setup SSH Keys and known_hosts
        if: 0 == 1
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          ssh-agent -a $SSH_AUTH_SOCK > /dev/null
          ssh-add - <<< "$SSH_PRIVATE_KEY" 

      - name: test ssh
        if: 0 == 1
        env:
          SSH_AUTH_SOCK: /tmp/ssh_agent.sock        
        run: |
          echo SSH connection
          ssh $USER@$HOST ls /tmp/doc  
          
      - name: ssh
        if: 1 == 1
        run: |
          echo SSH connection 
          mkdir ~/.ssh
          #echo "$KNOWN_HOST" >> ~/.ssh/known_host
          echo "$SSH_PRIVATE_KEY" >> ~/.ssh/key 
          ssh-keyscan -f ~/.ssh/key -H $HOST > ~/.ssh/known_hosts
          ssh -i ~/.ssh/key $USER@$HOST ls /tmp/doc
          rm key

